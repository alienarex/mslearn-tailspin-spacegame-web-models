pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'
  dotnetSdkVersion: '8.x'
  packageMinVersion: '1'

steps:
# Use .NET SDK
- task: UseDotNet@2
  displayName: 'Use .NET SDK $(dotnetSdkVersion)'
  inputs:
    version: '$(dotnetSdkVersion)'

# Authenticate to NuGet feed
- task: NuGetAuthenticate@1
  displayName: 'Authenticate with NuGet'

# Restore
- task: DotNetCoreCLI@2
  displayName: 'Restore project dependencies'
  inputs:
    command: 'restore'
    projects: '**/*.csproj'

# Build
- task: DotNetCoreCLI@2
  displayName: 'Build the project - $(buildConfiguration)'
  inputs:
    command: 'build'
    arguments: '--no-restore --configuration $(buildConfiguration)'
    projects: '**/*.csproj'

# pack the project
- task: DotNetCoreCLI@2
  displayName: 'Pack the project - $(buildConfiguration)'
  inputs:
    command: 'pack'
    projects: '**/*.csproj'
    arguments: '--no-build --configuration $(buildConfiguration)'
    versioningScheme: byPrereleaseNumber
    majorVersion: '1'
    minorVersion: '$(packageMinVersion)'
    patchVersion: '0'

# Push package (replaces NuGetCommand@2)
- task: DotNetCoreCLI@2
  displayName: 'Push NuGet package'
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg'
    nuGetFeedType: 'internal'
    publishVstsFeed: '$(System.TeamProject)/Tailspin.SpaceGame.Web.Models'
    arguments: '--skip-duplicate'
  condition: succeeded()
